version: '3'
services:
  mq:
    image: rabbitmq:3.8.10-alpine
    ports:
      - 5672:5672
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 10
  mysql-database:
    image: mysql:8.0.24
    ports:
        - '3306:3306'
    environment:
      MYSQL_DATABASE: 'iotdb'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'username'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
  database-client:
    build:
      context: ./database_client
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - "./database_client:/app"
    # entrypoint: [ "sleep", "15", "&&", "go", "run", "db-client.go" ]
    command: sh -c "sleep 15s && go run db-client.go"
    depends_on:
      - mysql-database
      - mq
  listener:
    build:
      context: ./listener
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - "./listener:/app"
    # entrypoint: [ "sleep", "15", "&&", "go", "run", "listener.go" ]
    command: sh -c "sleep 15s && go run listener.go"
    depends_on:
      - database-client
      - mq
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "6000:6000"
    volumes:
      - "./api:/app"
    command: sh -c "sleep 15s && go run api.go"
    depends_on:
      - database-client
      - mq
      - listener
  nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile
    ports: 
      - "8080:8080"